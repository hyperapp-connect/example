{"version":3,"file":"server.js","sources":["../node_modules/@hyperapp/render/node/module.js"],"sourcesContent":["/*! Hyperapp Render | MIT Licence | https://github.com/hyperapp/render */\n\nimport { Readable } from 'stream';\n\nvar styleNameCache = new Map();\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern = /^ms-/;\nvar voidElements = new Set(['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr']);\nvar ignoreAttributes = new Set(['key', 'innerHTML', '__source']);\nvar escapeRegExp = /[\"&'<>]/g;\nvar escapeLookup = new Map([['\"', '&quot;'], ['&', '&amp;'], [\"'\", '&#39;'], ['<', '&lt;'], ['>', '&gt;']]);\n\nfunction escaper(match) {\n  return escapeLookup.get(match);\n}\n\nfunction escapeHtml(value) {\n  if (typeof value === 'number') {\n    return '' + value;\n  }\n\n  return ('' + value).replace(escapeRegExp, escaper);\n}\n\nfunction hyphenateStyleName(styleName) {\n  return styleNameCache.get(styleName) || styleNameCache.set(styleName, styleName.replace(uppercasePattern, '-$&').toLowerCase().replace(msPattern, '-ms-')).get(styleName);\n}\n\nfunction stringifyStyles(styles) {\n  var out = '';\n  var delimiter = '';\n  var styleNames = Object.keys(styles);\n\n  for (var i = 0; i < styleNames.length; i++) {\n    var styleName = styleNames[i];\n    var styleValue = styles[styleName];\n\n    if (styleValue != null) {\n      if (styleName === 'cssText') {\n        out += delimiter + styleValue;\n      } else {\n        out += delimiter + hyphenateStyleName(styleName) + ':' + styleValue;\n      }\n\n      delimiter = ';';\n    }\n  }\n\n  return out || null;\n}\n\nfunction renderFragment(_ref, stack) {\n  var nodeName = _ref.nodeName,\n      attributes = _ref.attributes,\n      children = _ref.children;\n  var out = '';\n  var footer = '';\n\n  if (nodeName) {\n    out += '<' + nodeName;\n    var keys = Object.keys(attributes);\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i];\n      var value = attributes[name];\n\n      if (name === 'style' && value && typeof value === 'object') {\n        value = stringifyStyles(value);\n      }\n\n      if (value != null && value !== false && typeof value !== 'function' && !ignoreAttributes.has(name)) {\n        out += ' ' + name;\n\n        if (value !== true) {\n          out += '=\"' + escapeHtml(value) + '\"';\n        }\n      }\n    }\n\n    if (voidElements.has(nodeName)) {\n      out += '/>';\n    } else {\n      out += '>';\n      footer = '</' + nodeName + '>';\n    }\n  }\n\n  var innerHTML = attributes.innerHTML;\n\n  if (innerHTML != null) {\n    out += innerHTML;\n  }\n\n  if (children.length > 0) {\n    stack.push({\n      childIndex: 0,\n      children: children,\n      footer: footer\n    });\n  } else {\n    out += footer;\n  }\n\n  return out;\n}\n\nfunction resolveNode(node, state, actions) {\n  if (typeof node === 'function') {\n    return resolveNode(node(state, actions), state, actions);\n  }\n\n  return node;\n}\n\nfunction renderer(view, state, actions) {\n  var stack = [{\n    childIndex: 0,\n    children: [view],\n    footer: ''\n  }];\n  var end = false;\n  return function (bytes) {\n    if (end) {\n      return null;\n    }\n\n    var out = '';\n\n    while (out.length < bytes) {\n      if (stack.length === 0) {\n        end = true;\n        break;\n      }\n\n      var frame = stack[stack.length - 1];\n\n      if (frame.childIndex >= frame.children.length) {\n        out += frame.footer;\n        stack.pop();\n      } else {\n        var node = resolveNode(frame.children[frame.childIndex++], state, actions);\n\n        if (node != null && typeof node !== 'boolean') {\n          if (node.pop) {\n            stack.push({\n              childIndex: 0,\n              children: node,\n              footer: ''\n            });\n          } else if (node.attributes) {\n            out += renderFragment(node, stack);\n          } else {\n            out += escapeHtml(node);\n          }\n        }\n      }\n    }\n\n    return out;\n  };\n}\nfunction renderToString(view, state, actions) {\n  return renderer(view, state, actions)(Infinity);\n}\n\nfunction renderToStream(view, state, actions) {\n  var _read = renderer(view, state, actions);\n\n  return new Readable({\n    read: function read(size) {\n      try {\n        this.push(_read(size));\n      } catch (err) {\n        this.emit('error', err);\n      }\n    }\n  });\n}\nfunction withRender$1(nextApp) {\n  return function (initialState, actionsTemplate, view, container) {\n    var actions = nextApp(initialState, Object.assign({}, actionsTemplate, {\n      getState: function getState() {\n        return function (state) {\n          return state;\n        };\n      }\n    }), view, container);\n\n    actions.toString = function () {\n      return renderToString(view, actions.getState(), actions);\n    };\n\n    actions.toStream = function () {\n      return renderToStream(view, actions.getState(), actions);\n    };\n\n    return actions;\n  };\n}\n\nexport { renderer, renderToString, renderToStream, withRender$1 as withRender };\n//# sourceMappingURL=module.js.map\n"],"names":[],"mappings}